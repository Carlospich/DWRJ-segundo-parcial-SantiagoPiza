{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\React\\\\DWRJ-segundo-parcial-SantiagoPiza\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Navbar from './components/navbar';\nimport SearchBox from './components/searchBox';\nimport Home from './pages/home';\n\n// Agrega la función FetchMealsByFirstLetter aquí\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchMealsByFirstLetter = async (letter = '') => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`);\n  const data = await response.json();\n  return data.meals;\n};\n_c = FetchMealsByFirstLetter;\nfunction App() {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const letter = 'b'; // Define la letra con la que deseas buscar comidas\n\n  useEffect(() => {\n    async function fetchMeals() {\n      try {\n        const mealsData = await FetchMealsByFirstLetter(letter);\n        if (mealsData && mealsData.length > 0) {\n          setMeals(mealsData);\n        } else {\n          console.error('No se encontraron comidas con la letra especificada.');\n        }\n      } catch (error) {\n        console.error('Error al obtener datos de la API: ', error);\n      }\n    }\n    fetchMeals();\n  }, [letter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Comidas que comienzan con la letra \\\"\", letter.toUpperCase(), \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meals-container\",\n      children: meals.map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meal.strMealThumb,\n          alt: meal.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: meal.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, meal.idMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"an3554G5PYiaii/PlvHt6YA7hZs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchMealsByFirstLetter\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","SearchBox","Home","jsxDEV","_jsxDEV","FetchMealsByFirstLetter","letter","response","fetch","data","json","meals","_c","App","_s","setMeals","fetchMeals","mealsData","length","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","map","meal","src","strMealThumb","alt","strMeal","idMeal","_c2","$RefreshReg$"],"sources":["C:/Users/PC/Documents/React/DWRJ-segundo-parcial-SantiagoPiza/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport Navbar from './components/navbar';\r\nimport SearchBox from './components/searchBox';\r\nimport Home from './pages/home';\r\n\r\n// Agrega la función FetchMealsByFirstLetter aquí\r\nconst FetchMealsByFirstLetter = async (letter = '') => {\r\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`);\r\n  const data = await response.json();\r\n  return data.meals;\r\n}\r\n\r\nfunction App() {\r\n  const [meals, setMeals] = useState([]);\r\n  const letter = 'b'; // Define la letra con la que deseas buscar comidas\r\n\r\n  useEffect(() => {\r\n    async function fetchMeals() {\r\n      try {\r\n        const mealsData = await FetchMealsByFirstLetter(letter);\r\n        if (mealsData && mealsData.length > 0) {\r\n          setMeals(mealsData);\r\n        } else {\r\n          console.error('No se encontraron comidas con la letra especificada.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener datos de la API: ', error);\r\n      }\r\n    }\r\n\r\n    fetchMeals();\r\n  }, [letter]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <h1>Comidas que comienzan con la letra \"{letter.toUpperCase()}\"</h1>\r\n      <div className=\"meals-container\">\r\n        {meals.map((meal) => (\r\n          <div key={meal.idMeal} className=\"meal-item\">\r\n            <img src={meal.strMealThumb} alt={meal.strMeal} />\r\n            <p>{meal.strMeal}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <SearchBox />\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,IAAI,MAAM,cAAc;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,MAAM,GAAG,EAAE,KAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,MAAO,EAAC,CAAC;EAC9F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,KAAK;AACnB,CAAC;AAAAC,EAAA,GAJKP,uBAAuB;AAM7B,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACH,KAAK,EAAEI,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,MAAM,GAAG,GAAG,CAAC,CAAC;;EAEpBP,SAAS,CAAC,MAAM;IACd,eAAeiB,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMZ,uBAAuB,CAACC,MAAM,CAAC;QACvD,IAAIW,SAAS,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;UACrCH,QAAQ,CAACE,SAAS,CAAC;QACrB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,sDAAsD,CAAC;QACvE;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF;IAEAJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA;MAAAkB,QAAA,GAAI,uCAAoC,EAAChB,MAAM,CAACqB,WAAW,CAAC,CAAC,EAAC,IAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpEtB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BX,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdzB,OAAA;QAAuBiB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC1ClB,OAAA;UAAK0B,GAAG,EAAED,IAAI,CAACE,YAAa;UAACC,GAAG,EAAEH,IAAI,CAACI;QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClDtB,OAAA;UAAAkB,QAAA,EAAIO,IAAI,CAACI;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFbG,IAAI,CAACK,MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA,CAACH,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbtB,OAAA,CAACF,IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACZ,EAAA,CArCQD,GAAG;AAAAsB,GAAA,GAAHtB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}