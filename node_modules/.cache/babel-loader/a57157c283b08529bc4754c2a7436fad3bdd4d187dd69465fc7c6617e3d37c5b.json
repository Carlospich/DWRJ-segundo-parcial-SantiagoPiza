{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\React\\\\DWRJ-segundo-parcial-SantiagoPiza\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Navbar from './components/navbar';\nimport SearchBox from './components/searchBox';\nimport Home from './pages/home';\n\n// Agrega la función FetchMealsByFirstLetter aquí\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchMealsByFirstLetter = async (letter = '') => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`);\n  const data = await response.json();\n  return data.meals;\n};\n_c = FetchMealsByFirstLetter;\nfunction App() {\n  _s();\n  const [meal, setMeal] = useState(null);\n  const letter = 'b'; // Define la letra con la que deseas buscar comidas\n\n  useEffect(() => {\n    async function fetchRandomMeal() {\n      try {\n        const mealsData = await FetchMealsByFirstLetter(letter);\n        if (mealsData && mealsData.length > 0) {\n          // Establece solo la primera comida en el estado\n          setMeal(mealsData[0]);\n        } else {\n          console.error('No se encontraron comidas con la letra especificada.');\n        }\n      } catch (error) {\n        console.error('Error al obtener datos de la API: ', error);\n      }\n    }\n    fetchRandomMeal();\n  }, [letter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Imagen de una comida que comienza con la letra \\\"\", letter.toUpperCase(), \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), meal && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meal.strMealThumb,\n        alt: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+WlEK+2fanO9yD5R2BJTOJyLjio=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchMealsByFirstLetter\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","SearchBox","Home","jsxDEV","_jsxDEV","FetchMealsByFirstLetter","letter","response","fetch","data","json","meals","_c","App","_s","meal","setMeal","fetchRandomMeal","mealsData","length","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","src","strMealThumb","alt","strMeal","_c2","$RefreshReg$"],"sources":["C:/Users/PC/Documents/React/DWRJ-segundo-parcial-SantiagoPiza/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport Navbar from './components/navbar';\r\nimport SearchBox from './components/searchBox';\r\nimport Home from './pages/home';\r\n\r\n// Agrega la función FetchMealsByFirstLetter aquí\r\nconst FetchMealsByFirstLetter = async (letter = '') => {\r\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`);\r\n  const data = await response.json();\r\n  return data.meals;\r\n}\r\n\r\nfunction App() {\r\n  const [meal, setMeal] = useState(null);\r\n  const letter = 'b'; // Define la letra con la que deseas buscar comidas\r\n\r\n  useEffect(() => {\r\n    async function fetchRandomMeal() {\r\n      try {\r\n        const mealsData = await FetchMealsByFirstLetter(letter);\r\n        if (mealsData && mealsData.length > 0) {\r\n          // Establece solo la primera comida en el estado\r\n          setMeal(mealsData[0]);\r\n        } else {\r\n          console.error('No se encontraron comidas con la letra especificada.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener datos de la API: ', error);\r\n      }\r\n    }\r\n\r\n    fetchRandomMeal();\r\n  }, [letter]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <h1>Imagen de una comida que comienza con la letra \"{letter.toUpperCase()}\"</h1>\r\n      {meal && (\r\n        <div>\r\n          <img src={meal.strMealThumb} alt={meal.strMeal} />\r\n        </div>\r\n      )}\r\n      <SearchBox />\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,IAAI,MAAM,cAAc;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,MAAM,GAAG,EAAE,KAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,MAAO,EAAC,CAAC;EAC9F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,KAAK;AACnB,CAAC;AAAAC,EAAA,GAJKP,uBAAuB;AAM7B,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMQ,MAAM,GAAG,GAAG,CAAC,CAAC;;EAEpBP,SAAS,CAAC,MAAM;IACd,eAAekB,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMb,uBAAuB,CAACC,MAAM,CAAC;QACvD,IAAIY,SAAS,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;UACrC;UACAH,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,sDAAsD,CAAC;QACvE;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF;IAEAJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA;MAAAmB,QAAA,GAAI,mDAAgD,EAACjB,MAAM,CAACsB,WAAW,CAAC,CAAC,EAAC,IAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/EZ,IAAI,iBACHX,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAKyB,GAAG,EAAEd,IAAI,CAACe,YAAa;QAACC,GAAG,EAAEhB,IAAI,CAACiB;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN,eACDvB,OAAA,CAACH,SAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbvB,OAAA,CAACF,IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACb,EAAA,CAnCQD,GAAG;AAAAoB,GAAA,GAAHpB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}